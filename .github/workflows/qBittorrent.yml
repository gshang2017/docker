name: qBittorrent

on:
  push:
    paths:
    - 'qBittorrent/Dockerfile'
    - 'qBittorrent/Dockerfile.qb'
    - 'qBittorrent/Dockerfile.qbee'
    - 'qBittorrent/root/**'
  workflow_dispatch:

jobs:
  job1:
    name: buildx tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 'Set env'
        run: |
          echo "QBITTORRENT_VER=$(echo `grep -n "QBITTORRENT_VER=" qBittorrent/Dockerfile.qb`|awk -F= '{print $2}')" >> $GITHUB_ENV
          echo "QB_ALPINE_VER=$(echo `grep -n "FROM alpine" qBittorrent/Dockerfile.qb`|awk -F: '{print $3}')" >> $GITHUB_ENV

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check image exist
        id: qb-check-step
        run: |
          if [ `DOCKER_CLI_EXPERIMENTAL=enabled docker manifest inspect ghcr.io/gshang2017/qbittorrent-nox:${{ env.QBITTORRENT_VER }}-alpine-${{ env.QB_ALPINE_VER }} > /dev/null  2>&1; echo $?` == "0" ];then echo "skipnext=true" >> $GITHUB_OUTPUT;fi

      - name: Build and push
        if : ( steps.qb-check-step.outputs.skipnext  != 'true' )
        uses: docker/build-push-action@v6
        with:
          context: ./qBittorrent
          file: ./qBittorrent/Dockerfile.qb
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            ghcr.io/gshang2017/qbittorrent-nox:latest
            ghcr.io/gshang2017/qbittorrent-nox:${{ env.QBITTORRENT_VER }}-alpine-${{ env.QB_ALPINE_VER }}

  job2:
    name: buildx tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 'Set env'
        run: |
          echo "QBITTORRENT_EE_VER=$(echo `grep -n "QBITTORRENT_EE_VER=" qBittorrent/Dockerfile.qbee`|awk -F= '{print $2}')" >> $GITHUB_ENV
          echo "QBEE_ALPINE_VER=$(echo `grep -n "FROM alpine" qBittorrent/Dockerfile.qbee`|awk -F: '{print $3}')" >> $GITHUB_ENV

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check image exist
        id: qbee-check-step
        run: |
          if [ `DOCKER_CLI_EXPERIMENTAL=enabled docker manifest inspect ghcr.io/gshang2017/qbittorrentee-nox:${{ env.QBITTORRENT_EE_VER }}-alpine-${{ env.QBEE_ALPINE_VER }} > /dev/null  2>&1; echo $?` == "0" ];then echo "skipnext=true" >> $GITHUB_OUTPUT;fi

      - name: Build and push
        if : ( steps.qbee-check-step.outputs.skipnext  != 'true' )
        uses: docker/build-push-action@v6
        with:
          context: ./qBittorrent
          file: ./qBittorrent/Dockerfile.qbee
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            ghcr.io/gshang2017/qbittorrentee-nox:latest
            ghcr.io/gshang2017/qbittorrentee-nox:${{ env.QBITTORRENT_EE_VER }}-alpine-${{ env.QBEE_ALPINE_VER }}

  job3:
    needs: [job1, job2]
    name: buildx tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 'Set env'
        run: |
          echo "QBITTORRENT_VER=$(echo `grep -n "QBITTORRENT_VER=" qBittorrent/Dockerfile.qb`|awk -F= '{print $2}')" >> $GITHUB_ENV
          echo "QBITTORRENT_EE_VER=$(echo `grep -n "QBITTORRENT_EE_VER=" qBittorrent/Dockerfile.qbee`|awk -F= '{print $2}')" >> $GITHUB_ENV

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./qBittorrent
          file: ./qBittorrent/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            johngong/qbittorrent:latest
            johngong/qbittorrent:${{ env.QBITTORRENT_VER }}-${{ env.QBITTORRENT_EE_VER }}
            ghcr.io/gshang2017/qbittorrent:latest
            ghcr.io/gshang2017/qbittorrent:${{ env.QBITTORRENT_VER }}-${{ env.QBITTORRENT_EE_VER }}

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: johngong/qbittorrent
          short-description: qBittorrent:${{ env.QBITTORRENT_VER }},qBittorrent-EE:${{ env.QBITTORRENT_EE_VER }},集成Trackers更新
          readme-filepath: ./qBittorrent/README.md
